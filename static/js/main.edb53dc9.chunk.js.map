{"version":3,"sources":["serviceWorker.js","index.js","web3.js","storehash.js","ipfs.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","web3","Web3","currentProvider","eth","Contract","ipfs","require","host","port","protocol","Crypto","util","e","g","self","rotl","a","b","rotr","endian","constructor","Number","length","randomBytes","push","Math","floor","random","bytesToWords","c","d","wordsToBytes","bytesToHex","toString","join","hexToBytes","parseInt","substr","bytesToBase64","btoa","f","bytesToString","charAt","base64ToBytes","atob","stringToBytes","replace","indexOf","pow","charenc","UTF8","unescape","encodeURIComponent","decodeURIComponent","escape","Binary","charCodeAt","String","fromCharCode","getSHA1","sha1File","settings","hash","sha1","block","words","h0","h1","h2","h3","h4","i","th0","th1","th2","th3","th4","j","n","k","t","File","prototype","slice","webkitSlice","mozSlice","FileReader","FileList","Blob","run","file","inStart","inEnd","end","min","size","start","reader","onload","sha1_progress","bTotal","bLeft","bTotalH","bTotalL","event","result","target","Uint8Array","sha1_hash","console","log","blob","readAsArrayBuffer","state","ipfsHash","getIPFShash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","url","fileName","appName","version","txReceipt","captureFile","async","stopPropagation","preventDefault","files","onloadend","convertToBuffer","Buffer","from","setState","onClick","getTransactionReceipt","err","handleGetUrl","value","handleGetFileName","handleGetAppName","handleGetVersion","Downlaod","createElement","href","body","appendChild","click","removeChild","IPFSDownlaod","storehash","methods","getAppHash","call","setTimeout","cat","streamFile","elementA","download","Date","style","display","URL","createObjectURL","onSubmit","getAccounts","accounts","options","address","add","storeApp","send","error","className","for","type","id","placeholder","this","onChange","marginRight","marginLeft","borderRadius","borderWidth","padding","borderStyle","borderColor","width","paddingTop","paddingBottom","bsStyle","bordered","responsive","Component"],"mappings":"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","file":"static/js/main.edb53dc9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\nexport default web3;","import web3 from './web3';\r\n//access our local copy to contract deployed on rinkeby testnet\r\n//use your own contract address\r\nconst address = '0xb9B591D8FA6bD901C273b1ef4FF564C286C3064b';\r\n//use the ABI from your contract\r\nconst abi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name_ver\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"fileHash\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"version\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"store\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"version\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAppHash\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"x\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"sha1\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"storeApp\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\nexport default new web3.eth.Contract(abi, address);","//using the infura.io node, otherwise ipfs requires you to run a //daemon on your own computer/server.\r\nconst IPFS = require('ipfs-http-client');\r\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n//run with local daemon\r\n// const ipfsApi = require(‘ipfs-api’);\r\n// const ipfs = new ipfsApi(‘localhost’, ‘5001’, {protocol:‘http’});\r\nexport default ipfs;","import React, { Component } from 'react';\nimport { Form, Button, Table} from \"react-bootstrap\";\nimport { Container} from 'reactstrap';\n//import logo from ‘./logo.svg’;\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n// import {sha1File} from './sha1';\n// import fileSha1 from './sha1';\n// import { Container } from 'react-bootstrap/lib/Tab';\n\nfunction Utf8ArrayToStr(array) {\n  var out, i, len, c;\n      var char2, char3;\n      out = \"\";\n      len = array.length;\n      i = 0;\n      while(i < len) {\n      c = array[i++];\n      switch(c >> 4)\n        {\n          case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n            // 0xxxxxxx\n            out += String.fromCharCode(c);\n            break;\n          case 12: case 13:\n            // 110x xxxx   10xx xxxx\n            char2 = array[i++];\n            out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            break;\n          case 14:\n            // 1110 xxxx  10xx xxxx  10xx xxxx\n            char2 = array[i++];\n            char3 = array[i++];\n            out += String.fromCharCode(((c & 0x0F) << 12) |\n                           ((char2 & 0x3F) << 6) |\n                           ((char3 & 0x3F) << 0));\n            break;\n          default:\n            break;\n        }\n      }\n      return out;\n}\n\n(typeof Crypto==\"undefined\"||!Crypto.util)&&function(){\n  var e=window.self.Crypto={}, \n  g=e.util={\n      rotl:function(a,b){\n          return a<<b|a>>>32-b\n      },\n      rotr:function(a,b){return a<<32-b|a>>>b},\n      endian:function(a){\n          if(a.constructor==Number)\n              return g.rotl(a,8)&16711935|g.rotl(a,24)&4278255360;\n          for(var b=0;b<a.length;b++){\n              a[b]=g.endian(a[b]);\n          }\n          return a\n      },\n      randomBytes:function(a){\n          for(var b=[];a>0;a--){\n              b.push(Math.floor(Math.random()*256));\n          }\n          return b\n      },\n      bytesToWords:function(a){\n          for(var b=[],c=0,d=0;c<a.length;c++,d+=8){\n              b[d>>>5]|=a[c]<<24-d%32;\n          }\n          return b\n      },\n      wordsToBytes:function(a){\n          for(var b=[],c=0;c<a.length*32;c+=8){\n              b.push(a[c>>>5]>>>24-c%32&255);\n          }\n          return b\n      },\n      bytesToHex:function(a){\n          for(var b=[],c=0;c<a.length;c++){\n              b.push((a[c]>>>4).toString(16));\n              b.push((a[c]&15).toString(16));\n          }\n          return b.join(\"\")\n      },\n      hexToBytes:function(a){\n          for(var b=[],c=0;c<a.length;c+=2){\n              b.push(parseInt(a.substr(c,2),16));\n          }\n          return b\n      },\n      bytesToBase64:function(a){\n          if(typeof btoa==\"function\")return btoa(f.bytesToString(a));\n          for(var b=[],c=0;c<a.length;c+=3){\n              for(var d=a[c]<<16|a[c+1]<<8|a[c+2],e=0;e<4;e++){\n                  c*8+e*6<=a.length*8?b.push(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(d>>>6*(3-e)&63)):b.push(\"=\");\n              } \n          }\n          return b.join(\"\")\n      },\n      base64ToBytes:function(a){\n          if(typeof atob==\"function\")return f.stringToBytes(atob(a));\n          for(var a=a.replace(/[^A-Z0-9+\\/]/ig,\"\"),b=[],c=0,d=0;c<a.length;d=++c%4){\n              d!=0&&b.push((\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a.charAt(c-1))&Math.pow(2,-2*d+8)-1)<<d*2|\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a.charAt(c))>>>6-d*2);\n          }\n          return b\n      }\n  },\n  e=e.charenc={};\n  e.UTF8={\n      stringToBytes:function(a){\n          return f.stringToBytes(unescape(encodeURIComponent(a)))\n      },\n      bytesToString:function(a){\n          return decodeURIComponent(escape(f.bytesToString(a)))\n      }\n  };\n  var f=e.Binary={\n      stringToBytes:function(a){\n          for(var b=[],c=0;c<a.length;c++){\n              b.push(a.charCodeAt(c)&255);\n          }\n          return b\n      },\n      bytesToString:function(a){\n          for(var b=[],c=0;c<a.length;c++){\n              b.push(String.fromCharCode(a[c]));\n          }\n          return b.join(\"\")\n      }\n  }\n}();\n\n/*\n* sha1File v1.0.1\n* https://github.com/dwsVad/sha1File\n* (c) 2014 by Protsenko Vadim. All rights reserved.\n* https://github.com/dwsVad/sha1File/blob/master/LICENSE\n*/\nvar getSHA1 = '';\n\nfunction sha1File(settings)\n{\n  var fileSHA1 = '';\n  var hash = [1732584193, -271733879, -1732584194, 271733878, -1009589776];\n  var buffer = 1024 * 16 * 64;\n  var sha1 = function (block, hash)\n  {\n      var words = [];\n      var count_parts = 16;\n      var h0 = hash[0],\n          h1 = hash[1],\n          h2 = hash[2],\n          h3 = hash[3],\n          h4 = hash[4];\n      for(var i = 0; i < block.length; i += count_parts)\n      {\n          var th0 = h0,\n              th1 = h1,\n              th2 = h2,\n              th3 = h3,\n              th4 = h4;\n          for(var j = 0; j < 80; j++)\n          {\n              if(j < count_parts)\n                  words[j] = block[i + j] | 0;\n              else\n              {\n                  var n = words[j - 3] ^ words[j - 8] ^ words[j - 14] ^ words[j - count_parts];\n                  words[j] = (n << 1) | (n >>> 31);\n              }\n              var f,k;\n              if(j < 20)\n              {\n                  f = (h1 & h2 | ~h1 & h3);\n                  k = 1518500249;\n              }\n              else if(j < 40)\n              {\n                  f = (h1 ^ h2 ^ h3);\n                  k = 1859775393;\n              }\n              else if(j < 60)\n              {\n                  f = (h1 & h2 | h1 & h3 | h2 & h3);\n                  k = -1894007588;\n              }\n              else\n              {\n                  f = (h1 ^ h2 ^ h3);\n                  k = -899497514;\n              }\n\n              var t = ((h0 << 5) | (h0 >>> 27)) +h4 + (words[j] >>> 0) + f + k;\n              h4 = h3;\n              h3 = h2;\n              h2 = (h1 << 30) | (h1 >>> 2);\n              h1 = h0;\n              h0 = t;\n          }\n          h0 = (h0 + th0) | 0;\n          h1 = (h1 + th1) | 0;\n          h2 = (h2 + th2) | 0;\n          h3 = (h3 + th3) | 0;\n          h4 = (h4 + th4) | 0;\n      }\n      return [h0, h1, h2, h3, h4];\n  }\n\n  var run = function(file,inStart,inEnd)\n  {\n      var end = Math.min(inEnd, file.size);\n      var start = inStart;\n      var reader = new FileReader();\n\n      reader.onload = function()\n      {\n          file.sha1_progress = (end * 100 / file.size);\n    var event = event || window.event;\n    var result = event.result || event.target.result\n          var block = Crypto.util.bytesToWords( new Uint8Array(result));\n\n          if (end === file.size)\n          {\n              var bTotal, bLeft, bTotalH, bTotalL;\n              bTotal = file.size * 8;\n              bLeft = (end - start) * 8;\n\n              bTotalH = Math.floor(bTotal / 0x100000000);\n              bTotalL = bTotal & 0xFFFFFFFF;\n\n              // Padding\n              block[bLeft >>> 5] |= 0x80 << (24 - bLeft % 32);\n              block[((bLeft + 64 >>> 9) << 4) + 14] = bTotalH;\n              block[((bLeft + 64 >>> 9) << 4) + 15] = bTotalL;\n\n              hash = sha1(block, hash);\n              file.sha1_hash = Crypto.util.bytesToHex(Crypto.util.wordsToBytes(hash));\n              console.log(file.sha1_hash);\n              getSHA1 = file.sha1_hash;\n          }\n          else\n          {\n              hash = sha1(block, hash);\n              start += buffer;\n              end += buffer;\n              run(file,start,end);\n          }\n      }\n      var blob = file.slice(start, end);\n      reader.readAsArrayBuffer(blob);\n  }\n\n   var checkApi = function()\n   {\n      if((typeof File == 'undefined'))\n          return false;\n\n      if (!File.prototype.slice) {\n          if(File.prototype.webkitSlice)\n              File.prototype.slice = File.prototype.webkitSlice;\n          else if(File.prototype.mozSlice)\n              File.prototype.slice = File.prototype.mozSlice;\n      }\n\n      if (!window.File || !window.FileReader || !window.FileList || !window.Blob || !File.prototype.slice)\n          return false;\n\n       return true;\n  }\n\n  if(checkApi())\n  {\n      run(settings,0,buffer);\n  }\n  else\n      return false;\n\n}\n\n\n\n\nclass App extends Component {\n \n    state = {\n      ipfsHash:null,\n      sha1: '',\n      getIPFShash: '',\n      buffer:'',\n      ethAddress:'',\n      blockNumber:'',\n      transactionHash:'',\n      gasUsed:'',\n      url: '',\n      fileName: '',\n      appName: '',\n      version: 0,\n      txReceipt: ''   \n    };\n\n\ncaptureFile = async (event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        sha1File(file);\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)    \n      };\n\n convertToBuffer = async(reader) => {\n      //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n      //set this buffer -using es6 syntax\n        this.setState({buffer});\n    };\n\nonClick = async () => {\ntry{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting...\"});\n//get Transaction Receipt in console on click\n//See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\nawait web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n          console.log(err,txReceipt);\n          this.setState({txReceipt});\n        }); //await for getTransactionReceipt\nawait this.setState({blockNumber: this.state.txReceipt.blockNumber});\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});    \n      } //try\n    catch(error){\n        console.log(error);\n      } //catch\n  } //onClick\n\nhandleGetUrl = (event) => {\n  this.setState({\n    url : event.target.value,\n  })\n};\n\nhandleGetFileName = (event) => {\n  this.setState({\n    fileName : event.target.value,\n  })\n};\n\nhandleGetAppName = (event) => {\n  this.setState({\n    appName : event.target.value,\n  })\n};\n\nhandleGetVersion = (event) => {\n  this.setState({\n    version : event.target.value,\n  })\n};\n\n\n\nDownlaod = async (event) => {\n  const a = document.createElement('a');\n  // a.download = this.state.fileName;\n  a.href = this.state.url;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nIPFSDownlaod = async (event) => {\n  console.log('开始下载');\n  console.log(\"name: \"+ this.state.appName);\n  console.log(\"version: \"+ this.state.version);\n  \n  storehash.methods.getAppHash(this.state.appName, this.state.version).call().then(result => {\n      this.setState({getIPFShash: result})\n    // expected output: \"Success!\"\n  });\n  \n  setTimeout(()=>{\n    console.log(this.state.getIPFShash);\n    ipfs.cat(this.state.getIPFShash).then((streamFile) => {\n      console.log(streamFile)\n      const blob = new Blob([new Uint8Array(streamFile)]);\n      console.log(blob)\n      var elementA = document.createElement('a');\n        \n      //文件的名称为时间戳加文件名后缀\n      elementA.download = +new Date() + \".apk\";\n      elementA.style.display = 'none';\n      // //生成一个blob二进制数据，内容为json数据\n      // var blob = new Blob([JSON.stringify(jsonObj)]);\n      \n      //生成一个指向blob的URL地址，并赋值给a标签的href属性\n      elementA.href = URL.createObjectURL(blob);\n      document.body.appendChild(elementA);\n      elementA.click();\n      document.body.removeChild(elementA);\n    })\n  }, 2000)\n};\n\n// 'https://d.taptap.com/latest/sem/google'\n\nonSubmit = async (event) => {\n      event.preventDefault();\n      this.setState({sha1: getSHA1});\n      const accounts = await web3.eth.getAccounts();\n     \n      console.log('Sending from Metamask account: ' + accounts[0]);\n    //obtain contract address from storehash.js\n      const ethAddress= await storehash.options.address;\n      this.setState({ethAddress});\n    //save document to IPFS,return its hash#, and set hash# to state\n    //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err,ipfsHash);\n        //setState by setting ipfsHash to ipfsHash[0].hash \n        this.setState({ ipfsHash:ipfsHash[0].hash });\n   // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract \n  //return the transaction hash from the ethereum contract\n //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n        \n      storehash.methods.storeApp(this.state.ipfsHash,this.state.fileName,this.state.sha1).send({\n        from: accounts[0] \n      }, (error, transactionHash) => {\n        console.log(transactionHash);\n        this.setState({transactionHash});\n      }); //storehash \n      \n\n      }) //await ipfs.add \n    }; //onSubmit\n\n    // QmSxn1JkkGAFHJkAg2QzVmMXGr65ifKXY21Pywa3NY7JYK\n    // QmZyzZELEEdFchhjE9MwFTJtGSFSnzZhrvUGpkZuLRESZD metamask\n\n\n\nrender() {\n      \n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1> APK Chain</h1>\n            <h3>A Blockchain Based Android Application Market</h3>\n          </header>\n          \n          <hr/>\n        <Container>\n          {/* <h3> Choose file to send to IPFS </h3>\n          <Form onSubmit={this.onSubmit}>\n            <input \n              type = \"file\"\n              onChange = {this.captureFile}\n            /> */}\n            <h2><b> Download APP With Resource URL </b></h2>\n            <br></br>\n            <label for=\"URL\">URL</label>\n            <input\n              type = 'text'\n              id = 'URL'\n              placeholder = {'Please enter url here'}\n              value={this.state.url}\n              onChange={this.handleGetUrl}\n              style={{ marginRight: '3%', \n              marginLeft: '1%',\n              borderRadius: 5, \n              borderWidth: 1, \n              padding: 5,\n              borderStyle: 'solid',\n              borderColor: '#797D7F'}}\n            />\n            {/* <input\n              value={this.state.fileName}\n              onChange={this.handleGetFileName}\n            /> */}\n            <Button \n            // bsStyle=\"secondary\"\n            // type=\"submit\"\n            onClick = {this.Downlaod}\n            > \n            Download APK\n            </Button>\n\n            <hr />\n            <h2><b> Choose File to Send to IPFS </b></h2>\n            <br></br>\n            <label for=\"Name\">App Name</label>\n            <input\n              type = 'text'\n              id = 'Name'\n              placeholder = {'Please enter app name here'}\n              value={this.state.fileName}\n              onChange={this.handleGetFileName}\n              style={{ marginRight: '3%', \n              marginLeft: '1%',\n              borderRadius: 5, \n              borderWidth: 1, \n              width: '20%',\n              paddingTop: 5,\n              paddingBottom:5,\n              borderStyle: 'solid',\n              borderColor: '#797D7F'}}\n            />\n            <br></br>        \n            <br></br>\n          <Form onSubmit={this.onSubmit}>\n              <input \n              type = \"file\"\n              id = 'APK'\n              onChange = {this.captureFile}\n              style = {{\n                marginLeft: '42%'\n              }}\n                />\n            <br></br>\n            <Button \n            // bsStyle=\"secondary\" \n            type=\"submit\"> \n            Send It to IPFS\n            </Button>\n          </Form>\n\n          <hr/>\n          <h2><b> Download APP from IPFS </b></h2>\n          <br></br>\n          <label for=\"AppName\">App Name</label>\n          <input\n              type = 'text'\n              id = 'AppName'\n              placeholder = {'Please enter app name here'}\n              value = {this.state.appName}\n              onChange={this.handleGetAppName}\n              style={{ marginRight: '3%', \n              marginLeft: '1%',\n              borderRadius: 5, \n              borderWidth: 1, \n              padding: 5,\n              borderStyle: 'solid',\n              borderColor: '#797D7F'}}\n            />\n            <label for=\"version\">Version</label>\n            <input\n              type = 'number'\n              id = 'version'\n              placeholder = {'Please enter version here'}\n              value = {this.state.version}\n              onChange={this.handleGetVersion}\n              style={{ marginRight: '3%', \n              marginLeft:'1%',\n              borderRadius: 5, \n              borderWidth: 1, \n              padding: 5,\n              borderStyle: 'solid',\n              borderColor: '#797D7F'}}\n            />\n            <br></br>\n            <br></br>\n            <Button \n            // bsStyle=\"dark\" \n            // type=\"submit\"\n            onClick = {this.IPFSDownlaod}\n            > \n            Download APK from IPFS\n            </Button>\n\n          <hr/>\n          <Button bsStyle= 'info' onClick = {this.onClick}> Get Transaction Receipt </Button>\n          <Table bordered responsive>\n          <thead>\n            <tr>\n              <th>Tx Receipt Category</th>\n              <th>Values</th>\n            </tr>\n          </thead>\n          \n          <tbody>\n            <tr>\n              <td>IPFS Hash # stored on Eth Contract</td>\n              <td>{this.state.ipfsHash}</td>\n            </tr>\n            <tr>\n              <td>Ethereum Contract Address</td>\n              <td>{this.state.ethAddress}</td>\n            </tr>\n            <tr>\n              <td>Tx Hash # </td>\n              <td>{this.state.transactionHash}</td>\n            </tr>\n            <tr>\n              <td>Block Number # </td>\n              <td>{this.state.blockNumber}</td>\n            </tr>\n            <tr>\n              <td>Gas Used</td>\n              <td>{this.state.gasUsed}</td>\n            </tr>\n            <tr>\n              <td>sha1</td>\n              <td>{this.state.sha1}</td>\n            </tr>\n                \n            </tbody>\n          </Table>\n        </Container>\n      </div>\n    );\n  } //render\n} //App\nexport default App;"],"sourceRoot":""}